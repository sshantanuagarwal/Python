#include <iostream>
#include<vector>
using namespace std;
typedef vector<int> VI;
vector<VI> G,H;
int n,m,k,k1,k2,sto1,sto2,arr1[100005],arr2[100005],indeg[100005],brr1[100005],brr2[100005],indeg1[100005],i,u,v,l,turn;
int var,cnt,res1,res2;
int main()
{
    cin>>n>>m>>k;
    while(n!=0||m!=0||k!=0)
{
    for(i=1;i<=n+m;i++)
        indeg[i]=0;
    G=vector<VI>(n+m+1);
    H=vector<VI>(n+m+1);
    while(k--)
    {
      cin>>u>>v;
      G[v].push_back(u);
      H[v].push_back(u);
      indeg[u]++;
    }
    k1=-1;k2=-1;
    for(i=1;i<=n+m;i++)
    {
        if(indeg[i]==0)
        {
            if(i<=n)
            {k1++;arr1[k1]=i;}
            else
            {k2++;arr2[k2]=i;}
        }
    }
    for(i=1;i<=n+m;i++)
    indeg1[i]=indeg[i];
    for(i=0;i<=k1;i++)
    brr1[i]=arr1[i];
    for(i=0;i<=k2;i++)
    brr2[i]=arr2[i];
    sto1=k1;
    sto2=k2;
    turn=0;
    var=-1;cnt=1;
    while(k1>=0||k2>=0)
    {
        if(turn==0)
        {
            if(k1>=0)
            {
                u=brr1[k1];
                k1--;
            }
            else
            {
                u=brr2[k2];
                k2--;
                turn=1;
            }
        }
        else
        {
            if(k2>=0)
            {
                u=brr2[k2];
                k2--;
            }
            else
            {
                u=brr1[k1];
                k1--;
                turn=0;
            }
        }
        if(var==-1)
        {
            if(u<=n)
            var=0;
            else
            var=1;
        }
        else if(var==0)
        {
            if(u>n)
            {cnt++;
            var=1;}
        }
        else
        {
            if(u<=n)
            {cnt++;var=0;}
        }
        l=G[u].size();
        for(i=0;i<l;i++)
        {
         indeg1[G[u].back()]--;
         if(indeg1[G[u].back()]==0)
         {
             if(G[u].back()<=n)
             {
                 k1++;
                 brr1[k1]=G[u].back();
             }
             else
             {
                 k2++;
                 brr2[k2]=G[u].back();
             }
         }
         G[u].pop_back();
        }
    }
    res1=cnt+1;
    k1=sto1;
    k2=sto2;
    for(i=1;i<=n+m;i++)
    indeg1[i]=indeg[i];
    for(i=0;i<=k1;i++)
    brr1[i]=arr1[i];
    for(i=0;i<=k2;i++)
    brr2[i]=arr2[i];
    turn=1;
    var=-1;cnt=1;
    while(k1>=0||k2>=0)
    {
        if(turn==0)
        {
            if(k1>=0)
            {
                u=brr1[k1];
                k1--;
            }
            else
            {
                u=brr2[k2];
                k2--;
                turn=1;
            }
        }
        else
        {
            if(k2>=0)
            {
                u=brr2[k2];
                k2--;
            }
            else
            {
                u=brr1[k1];
                k1--;
                turn=0;
            }
        }
        if(var==-1)
        {
            if(u<=n)
            var=0;
            else
            var=1;
        }
        else if(var==0)
        {
            if(u>n)
            {cnt++;var=1;}
        }
        else
        {
            if(u<=n)
            {cnt++;var=0;}
        }
        l=H[u].size();
        for(i=0;i<l;i++)
        {
         indeg1[H[u].back()]--;
         if(indeg1[H[u].back()]==0)
         {
             if(H[u].back()<=n)
             {
                 k1++;
                 brr1[k1]=H[u].back();
             }
             else
             {
                 k2++;
                 brr2[k2]=H[u].back();
             }
         }
         H[u].pop_back();
        }
    }
    res2=cnt+1;
    cout<<min(res1,res2)<<endl;
    cin>>n>>m>>k;
}
}
