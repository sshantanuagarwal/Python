#include <iostream>
#include<queue>
using namespace std;
typedef vector<int> VI;
vector<VI> G;
int indeg_i[100004],indeg[100004],arr1_i[100004],arr2_i[100004],arr1[100004],arr2[100004],ans1[100004],ans2[100004];
int stk1,stk2,k1,k2,l,l1,res,u,v,n,m,Q,turn,cnt,i;
int main()
{
   cin>>n>>m>>Q;
   G=vector<VI>(n+m+1);
   while(n!=0||m!=0||Q!=0)
   {
       for(i=1;i<=n+m;i++)
    indeg_i[i]=0;
   while(Q--)
   {
       cin>>u>>v;
       G[v][u]=1;
       indeg_i[u]++;
   }k1=0;k2=0;
   for(i=1;i<=n+m;i++)
   {
       if(indeg_i[i]==0)
       {
           if(i<=n)
           {arr1_i[k1]=i;k1++;}
           else
           {arr2_i[k2]=i;k2++;}
       }
   }
   for(i=1;i<=n+m;i++)
    indeg[i]=indeg_i[i];
   for(i=0;i<k1;i++)
    arr1[i]=arr1_i[i];
   for(i=0;i<k2;i++)
    arr2[i]=arr2_i[i];
   turn=0;
   stk1=k1;
   stk2=k2;
   l=0;
   while(k1>=0||k2>=0)
   {
       if(turn==0)
       {if(k1>=0)
        {u=arr1[k1];
       k1--;
       turn=0;}
       else
       {
           if(k2>=0)
        {u=arr2[k2];
       k2--;
       turn=1;}
       }
       }
       else
       {
        if(k2>=0)
        {u=arr2[k2];
       k2--;
       turn=1;
        }
        else
        {
            if(k1>=0)
        {u=arr1[k1];
       k1--;
       turn=0;}
        }
       }
       cout<<u<<" ";
       ans1[l]=u;
       l++;
       for(i=1;i<=n+m;i++)
       {
           if(G[u][i]==1)
           {
               indeg[i]--;
               G[u][i]=0;
               if(indeg[i]==0)
               {
                if(i<=n)
                {k1++;
                arr1[k1]=i;
                }
                else
                {k2++;
                arr2[k2]=i;
                }
               }
           }
       }
   }
   cout<<"e"<<endl;
   k1=stk1;
   k2=stk2;
   for(i=1;i<=n+m;i++)
    indeg[i]=indeg_i[i];
   for(i=0;i<k1;i++)
    arr1[i]=arr1_i[i];
   for(i=0;i<k2;i++)
    arr2[i]=arr2_i[i];
    l1=0;
   turn=1;
   while(k1>=0||k2>=0)
   {
       if(turn==0)
       {if(k1>=0)
        {u=arr1[k1];
       k1--;
       turn=0;}
       else
       {
           if(k2>=0)
        {u=arr2[k2];
       k2--;
       turn=1;}
       }
       }
       else
       {
        if(k2>0)
        {u=arr2[k2];
       k2--;
       turn=1;
        }
        else
        {if(k1>=0)
        {u=arr1[k1];
       k1--;
       turn=0;}
        }
       }
       ans2[l1]=u;
       l1++;
       for(i=1;i<=n+m;i++)
       {
           if(G[u][i]==1)
           {
               indeg[i]--;
               G[u][i]=0;
               if(indeg[i]==0)
               {
                if(i<=n)
                {k1++;
                arr1[k1]=i;
                }
                else
                {k2++;
                arr2[k2]=i;
                }
               }
           }
       }
   }
     cnt=1;
    for(i=0;i<l-1;i++)
    {
    if((ans1[i]<=n&&ans1[i+1]<=n)||(ans1[i]>n&&ans1[i+1]>n));
    else
    cnt++;
    }
    cnt++;
    res=cnt;
     cnt=1;
    for(i=0;i<l1-1;i++)
    {
    if((ans2[i]<=n&&ans2[i+1]<=n)||(ans2[i]>n&&ans2[i+1]>n));
    else
    cnt++;
    }
    cnt++;
    res=min(res,cnt);
    cout<<res<<endl;
    cin>>n>>m>>Q;
   }
    return 0;
}
